// Color sensor pins
const int COLOR_S0 = A0;
const int COLOR_S1 = A1;
const int COLOR_S2 = A2;
const int COLOR_S3 = A3;
const int COLOR_OUT = A4;
const int COLOR_LED = A5;

// Color frequency readings
int redFreq = 0;
int greenFreq = 0;
int blueFreq = 0;
String detectedColor = "UNKNOWN";

void setup() {
  Serial.begin(9600);
  Serial.println("Testing Accurate Color Detection...");

  // Pin setup
  pinMode(COLOR_S0, OUTPUT);
  pinMode(COLOR_S1, OUTPUT);
  pinMode(COLOR_S2, OUTPUT);
  pinMode(COLOR_S3, OUTPUT);
  pinMode(COLOR_LED, OUTPUT);
  pinMode(COLOR_OUT, INPUT);

  // Set frequency scaling to 20%
  digitalWrite(COLOR_S0, HIGH);
  digitalWrite(COLOR_S1, LOW);

  // Turn on sensor LED
  digitalWrite(COLOR_LED, HIGH);
}

void loop() {
  // RED
  digitalWrite(COLOR_S2, LOW);
  digitalWrite(COLOR_S3, LOW);
  redFreq = pulseIn(COLOR_OUT, LOW);
  delay(50);

  // GREEN
  digitalWrite(COLOR_S2, HIGH);
  digitalWrite(COLOR_S3, HIGH);
  greenFreq = pulseIn(COLOR_OUT, LOW);
  delay(50);

  // BLUE
  digitalWrite(COLOR_S2, LOW);
  digitalWrite(COLOR_S3, HIGH);
  blueFreq = pulseIn(COLOR_OUT, LOW);
  delay(50);

  // Determine color
  detectedColor = detectColor(redFreq, greenFreq, blueFreq);

  // Print results
  Serial.print("R: ");
  Serial.print(redFreq);
  Serial.print(" | G: ");
  Serial.print(greenFreq);
  Serial.print(" | B: ");
  Serial.print(blueFreq);
  Serial.print(" --> Color: ");
  Serial.println(detectedColor);

  delay(300);
}

String detectColor(int r, int g, int b) {
  // Avoid false readings
  if (r == 0 || g == 0 || b == 0) return "NO COLOR";

  // Use relative comparison
  if (r < g && r < b && g > b * 1.2) {
    return "BLUE";
  } else if (g < r && g < b && r > b * 1.2) {
    return "RED";
  } else if (b < r && b < g && g > r * 0.8) {
    return "GREEN";
  } else if (r < 120 && g < 120 && b < 120) {
    return "BLACK";
  } else if (r > 200 && g > 200 && b > 200) {
    return "WHITE";
  } else if (r < b && g < b) {
    return "YELLOW";
  } else {
    return "UNKNOWN";
  }
}
